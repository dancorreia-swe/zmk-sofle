#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hrm: homerow_mod {
        compatible = "zmk,behavior-hold-tap";
        label = "Homerow Mod";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESC>;
            key-positions = <0 13>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            bindings = <
&mt ESCAPE GRAVE  &kp N1               &kp N2           &kp N3           &kp N4             &kp N5    &kp UP_ARROW     &kp N6  &kp N7              &kp N8            &kp N9            &kp N0         &kp DEL
&kp TAB           &kp Q                &kp W            &kp F            &kp P              &kp B     &kp DOWN_ARROW   &kp J   &kp L               &kp U             &kp Y             &kp SEMICOLON  &kp BSLH
&kp CAPS          &hrm LEFT_CONTROL A  &hrm LEFT_ALT R  &hrm LEFT_GUI S  &hrm LEFT_SHIFT T  &kp G     &kp LEFT_ARROW   &kp M   &hrm RIGHT_SHIFT N  &hrm RIGHT_GUI E  &hrm RIGHT_ALT I  &hrm RCTRL O   &kp APOS
&kp LSHFT         &kp Z                &kp X            &kp C            &kp D              &kp V     &kp RIGHT_ARROW  &kp K   &kp H               &kp COMMA         &kp DOT           &kp FSLH       &mo 4
&kp C_MUTE        &kp LCTRL            &kp LEFT_GUI     &kp LEFT_ALT     &kp SPACE          &mo 1     &kp ENTER        &mo 2   &kp ENTER           &kp BACKSPACE     &kp RIGHT_SHIFT   &tog 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        LOWER {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3            &kp F4           &kp F5             &mmv MOVE_UP     &kp F6     &kp F7                &kp F8                 &kp F9           &kp F10           &trans
&trans      &kp GRAVE        &kp LT          &kp GREATER_THAN  &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp AMPS   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT      &kp MINUS         &kp EQUAL
&trans      &kp EXCLAMATION  &kp MINUS       &kp PLUS          &kp EQUAL        &mkp MB5           &mmv MOVE_LEFT   &kp PIPE   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR       &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp UNDER  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN      &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans            &trans           &trans             &mkp LCLK        &trans     &trans                &rgb_ug RGB_BRD        &rgb_ug RGB_BRI  &trans
            >;

            display-name = "Symbol";
            sensor-bindings = <&scroll_encoder>;
        };

        RAISE {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Moviment";
        };

        ADJUST {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Config";
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "Function";
        };
    };
};
