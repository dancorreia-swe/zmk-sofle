#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hrm: homerow_mod {
        compatible = "zmk,behavior-hold-tap";
        label = "Homerow Mod";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        flavor = "balanced";
    };

    rbg_glow: rbg_glow {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

        tap-ms = <100>;
        label = "RBG_GLOW";
    };

    combos { compatible = "zmk,combos"; };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&shifted>, <&kp>;
        };

        rgb_hue_morph: rgb_h_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "I/D RGB w/ Shift";
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        rgb_b: rgb_b_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RGB Brightness Morph";
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rbg_sat: rbg_sat {
            compatible = "zmk,behavior-mod-morph";
            label = "RBG_SAT";
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&gresc       &kp N1       &kp N2        &kp N3        &kp N4         &kp N5       &kp UP_ARROW     &kp N6       &kp N7           &kp N8        &kp N9           &kp N0         &kp DEL
&key_repeat  &kp Q        &kp W         &kp F         &kp P          &kp B        &kp DOWN_ARROW   &kp J        &kp L            &kp U         &kp Y            &kp SEMICOLON  &kp BSLH
&kp CAPS     &hrm LGUI A  &hrm LALT R   &hrm LCTRL S  &hrm LSHIFT T  &kp G        &kp LEFT_ARROW   &kp M        &hrm RSHIFT N    &hrm RCTRL E  &hrm RALT I      &hrm RGUI O    &kp APOS
&kp LSHFT    &kp Z        &kp X         &kp C         &kp D          &kp V        &kp RIGHT_ARROW  &kp K        &kp H            &kp COMMA     &kp DOT          &kp FSLH       &key_repeat
&kp C_MUTE   &kp LCTRL    &kp LEFT_GUI  &lt 4 ESC     &lt 1 SPACE    &lt 2 TAB    &kp ENTER        &lt 6 ENTER  &lt 5 BACKSPACE  &lt 7 DELETE  &kp RIGHT_SHIFT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        Navigation {
            bindings = <
&trans      &trans        &trans        &trans            &trans      &trans    &mmv MOVE_UP     &trans         &trans         &trans         &trans       &trans     &trans
&trans      &trans        &trans        &trans            &trans      &trans    &mmv MOVE_DOWN   &kp LS(LG(Z))  &kp LG(V)      &kp LG(C)      &kp LG(X)    &kp LG(Z)  &trans
&mo 3       &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LSHIFT  &trans    &mmv MOVE_LEFT   &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT    &kp CAPS   &trans
&trans      &trans        &trans        &trans            &trans      &trans    &mmv MOVE_RIGHT  &kp INSERT     &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans
&kp C_MUTE  &trans        &trans        &trans            &trans      &trans    &mkp LCLK        &kp ENTER      &kp BACKSPACE  &kp DELETE     &trans       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Nav";
        };

        Mouse {
            bindings = <
&trans  &trans        &trans    &trans     &trans          &trans    &mmv MOVE_UP     &trans          &trans          &trans        &trans           &trans     &trans
&trans  &trans        &trans    &trans     &trans          &trans    &mmv MOVE_DOWN   &kp LG(LS(Z))   &kp LG(V)       &kp LG(C)     &kp LG(X)        &kp LG(Z)  &trans
&to 3   &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &mmv MOVE_LEFT   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans     &trans
&trans  &trans        &trans    &trans     &trans          &trans    &mmv MOVE_RIGHT  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans     &trans
&trans  &trans        &trans    &trans     &trans          &trans    &mkp LCLK        &mkp RCLK       &mkp LCLK       &mkp MCLK     &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Mouse";
        };

        Windows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LS(LC(Z))  &kp LC(V)  &kp LC(C)  &kp LC(X)  &kp LC(Z)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans     &trans     &trans     &trans
            >;

            label = "W-Keys";
        };

        Media {
            bindings = <
&trans           &trans        &trans    &trans     &trans      &trans    &trans  &trans             &trans            &trans             &trans           &trans          &trans
&trans           &trans        &trans    &trans     &trans      &trans    &trans  &rgb_ug RGB_TOG    &rgb_ug RGB_EFF   &rgb_hue_morph     &rbg_sat         &rgb_b          &trans
&trans           &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHIFT  &trans    &trans  &ext_power EP_TOG  &kp C_PREVIOUS    &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp C_NEXT      &trans
&trans           &trans        &trans    &trans     &trans      &trans    &trans  &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3    &bt BT_SEL 4
&rgb_ug RGB_TOG  &trans        &trans    &trans     &trans      &trans    &trans  &kp C_STOP         &kp C_PLAY_PAUSE  &kp K_MUTE         &bt BT_CLR       &bt BT_CLR_ALL
            >;

            sensor-bindings = <&rbg_glow>;
            label = "Media";
        };

        Number {
            bindings = <
&trans  &trans                          &trans                  &trans              &trans                       &trans                              &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &as_ht LEFT_BRACE LEFT_BRACKET  &as_ht AMPERSAND N7     &as_ht STAR N8      &as_ht LPAR N9               &as_ht RIGHT_BRACE RIGHT_BRACKET    &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &as_ht COLON SEMICOLON          &as_ht DOLLAR NUMBER_4  &as_ht PERCENT N5   &as_ht CARET NUMBER_6        &kp EQUAL                           &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &as_ht TILDE GRAVE              &as_ht EXCL NUMBER_1    &as_ht AT NUMBER_2  &as_ht HASH NUMBER_3         &kp BACKSLASH                       &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &trans                          &trans                  &as_ht GT PERIOD    &as_ht RIGHT_PARENTHESIS N0  &as_ht UNDER MINUS                  &trans  &trans  &trans     &trans     &trans    &trans
            >;

            label = "Number";
        };

        Symbol {
            bindings = <
&trans            &trans          &trans           &trans                &trans                 &trans             &trans  &trans  &trans      &trans     &trans    &trans    &trans
&kp GREATER_THAN  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp EQUAL              &kp RIGHT_BRACE    &trans  &trans  &trans      &trans     &trans    &trans    &trans
&kp LESS_THAN     &kp COLON       &kp DOLLAR       &kt PERCENT           &kp CARET              &kp PLUS           &trans  &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&kp BACKSLASH     &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp POUND              &kp PIPE           &trans  &trans  &trans      &trans     &trans    &trans    &trans
&trans            &trans          &trans           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &trans  &trans      &trans     &trans    &trans
            >;

            label = "Symbol";
        };

        Function {
            bindings = <
&trans  &trans   &trans  &trans     &trans     &trans             &trans  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5     &kp F6     &kp SCROLLLOCK     &trans  &trans  &kp RSHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &trans  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &trans   &trans  &kp K_APP  &kp SPACE  &kp TAB            &trans  &trans  &trans      &trans     &trans    &trans
            >;

            label = "Function";
        };
    };
};
